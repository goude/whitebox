// Generated by SolidPython 0.4.2 on 2019-11-20 23:50:59
$fn = 48;

union() {
	translate(v = [0, -25.0000000000, 0]) {
		translate(v = [-40.0000000000, 0, 0]) {
			union() {
				translate(v = [0, 0, 0]) {
					translate(v = [0, 0, 0]);
					union() {
						translate(v = [0, 0, 0]) {
							cube(size = [40.0000000000, 8, 1.0000000000]);
						}
						translate(v = [0, 0, 0]) {
							cube(size = [8, 25.0000000000, 1.0000000000]);
						}
					}
				}
				translate(v = [1.0000000000, 0, 0]) {
					translate(v = [0, 1.0000000000, 0]) {
						translate(v = [0, 0, 0]) {
							cube(size = [40.0000000000, 3.0000000000, 5.0000000000]);
						}
					}
				}
				translate(v = [0, 1.0000000000, 0]) {
					translate(v = [1.0000000000, 0, 0]) {
						translate(v = [0, 0, 0]) {
							cube(size = [3.0000000000, 25.0000000000, 5.0000000000]);
						}
					}
				}
				union() {
					translate(v = [1.0000000000, 0, 0]) {
						translate(v = [0, 1.0000000000, 0]) {
							difference() {
								translate(v = [0, 0, 0]) {
									translate(v = [0, 0, 0]);
									translate(v = [0, 0, 0]) {
										cube(size = [8, 8, 50]);
									}
								}
								translate(v = [4.0000000000, 0, 0]) {
									translate(v = [0, 4.0000000000, 0]) {
										translate(v = [0, 0, 47.0000000000]) {
											translate(v = [0, 0, 0]) {
												linear_extrude(height = 3.0000000000) {
													circle($fn = 48, r = 3.0500000000);
												}
											}
										}
									}
								}
								union() {
									translate(v = [0, 0, 43.4000000000]) {
										translate(v = [0, 4.0000000000, 0]) {
											translate(v = [4.0000000000, 0, 0]) {
												union() {
													translate(v = [0, 0, 0]) {
														linear_extrude(height = 2.6000000000) {
															circle($fn = 6, r = 3.1750000000);
														}
													}
													translate(v = [0, 0, -10]) {
														translate(v = [0, 0, 0]) {
															linear_extrude(height = 20) {
																circle($fn = 48, r = 1.5500000000);
															}
														}
													}
												}
											}
										}
									}
									translate(v = [0, 0, 43.4000000000]) {
										translate(v = [4.0000000000, 0, 0]) {
											translate(v = [0, 1.2500000000, 0]) {
												translate(v = [0, 0, 0]) {
													cube(size = [5.5000000000, 5.5000000000, 2.6000000000]);
												}
											}
										}
									}
								}
								union() {
									translate(v = [5.6001000000, 0, 0]) {
										translate(v = [0, 0, 10]) {
											translate(v = [0, 4.0000000000, 0]) {
												rotate(a = 90, v = [0, 1, 0]) {
													union() {
														translate(v = [0, 0, 0]) {
															linear_extrude(height = 2.4000000000) {
																circle($fn = 6, r = 3.1750000000);
															}
														}
														translate(v = [0, 0, -10]) {
															translate(v = [0, 0, 0]) {
																linear_extrude(height = 20) {
																	circle($fn = 48, r = 1.5500000000);
																}
															}
														}
													}
												}
											}
										}
									}
									translate(v = [4.0000000000, 0, 0]) {
										translate(v = [0, 0, 35]) {
											translate(v = [0, 5.6001000000, 0]) {
												rotate(a = 90, v = [0, 0, 1]) {
													translate(v = [0, 0, 0]) {
														rotate(a = 90, v = [0, 1, 0]) {
															union() {
																translate(v = [0, 0, 0]) {
																	linear_extrude(height = 2.4000000000) {
																		circle($fn = 6, r = 3.1750000000);
																	}
																}
																translate(v = [0, 0, -10]) {
																	translate(v = [0, 0, 0]) {
																		linear_extrude(height = 20) {
																			circle($fn = 48, r = 1.5500000000);
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					translate(v = [0, 0, 0]) {
						cube(size = [2.0000000000, 2.0000000000, 50]);
					}
				}
			}
		}
	}
	mirror(v = [0, 1, 0]) {
		translate(v = [0, 0, 0]) {
			translate(v = [0, -25.0000000000, 0]) {
				translate(v = [-40.0000000000, 0, 0]) {
					union() {
						translate(v = [0, 0, 0]) {
							translate(v = [0, 0, 0]);
							union() {
								translate(v = [0, 0, 0]) {
									cube(size = [40.0000000000, 8, 1.0000000000]);
								}
								translate(v = [0, 0, 0]) {
									cube(size = [8, 25.0000000000, 1.0000000000]);
								}
							}
						}
						translate(v = [1.0000000000, 0, 0]) {
							translate(v = [0, 1.0000000000, 0]) {
								translate(v = [0, 0, 0]) {
									cube(size = [40.0000000000, 3.0000000000, 5.0000000000]);
								}
							}
						}
						translate(v = [0, 1.0000000000, 0]) {
							translate(v = [1.0000000000, 0, 0]) {
								translate(v = [0, 0, 0]) {
									cube(size = [3.0000000000, 25.0000000000, 5.0000000000]);
								}
							}
						}
						union() {
							translate(v = [1.0000000000, 0, 0]) {
								translate(v = [0, 1.0000000000, 0]) {
									difference() {
										translate(v = [0, 0, 0]) {
											translate(v = [0, 0, 0]);
											translate(v = [0, 0, 0]) {
												cube(size = [8, 8, 50]);
											}
										}
										translate(v = [4.0000000000, 0, 0]) {
											translate(v = [0, 4.0000000000, 0]) {
												translate(v = [0, 0, 47.0000000000]) {
													translate(v = [0, 0, 0]) {
														linear_extrude(height = 3.0000000000) {
															circle($fn = 48, r = 3.0500000000);
														}
													}
												}
											}
										}
										union() {
											translate(v = [0, 0, 43.4000000000]) {
												translate(v = [0, 4.0000000000, 0]) {
													translate(v = [4.0000000000, 0, 0]) {
														union() {
															translate(v = [0, 0, 0]) {
																linear_extrude(height = 2.6000000000) {
																	circle($fn = 6, r = 3.1750000000);
																}
															}
															translate(v = [0, 0, -10]) {
																translate(v = [0, 0, 0]) {
																	linear_extrude(height = 20) {
																		circle($fn = 48, r = 1.5500000000);
																	}
																}
															}
														}
													}
												}
											}
											translate(v = [0, 0, 43.4000000000]) {
												translate(v = [4.0000000000, 0, 0]) {
													translate(v = [0, 1.2500000000, 0]) {
														translate(v = [0, 0, 0]) {
															cube(size = [5.5000000000, 5.5000000000, 2.6000000000]);
														}
													}
												}
											}
										}
										union() {
											translate(v = [5.6001000000, 0, 0]) {
												translate(v = [0, 0, 10]) {
													translate(v = [0, 4.0000000000, 0]) {
														rotate(a = 90, v = [0, 1, 0]) {
															union() {
																translate(v = [0, 0, 0]) {
																	linear_extrude(height = 2.4000000000) {
																		circle($fn = 6, r = 3.1750000000);
																	}
																}
																translate(v = [0, 0, -10]) {
																	translate(v = [0, 0, 0]) {
																		linear_extrude(height = 20) {
																			circle($fn = 48, r = 1.5500000000);
																		}
																	}
																}
															}
														}
													}
												}
											}
											translate(v = [4.0000000000, 0, 0]) {
												translate(v = [0, 0, 35]) {
													translate(v = [0, 5.6001000000, 0]) {
														rotate(a = 90, v = [0, 0, 1]) {
															translate(v = [0, 0, 0]) {
																rotate(a = 90, v = [0, 1, 0]) {
																	union() {
																		translate(v = [0, 0, 0]) {
																			linear_extrude(height = 2.4000000000) {
																				circle($fn = 6, r = 3.1750000000);
																			}
																		}
																		translate(v = [0, 0, -10]) {
																			translate(v = [0, 0, 0]) {
																				linear_extrude(height = 20) {
																					circle($fn = 48, r = 1.5500000000);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
							translate(v = [0, 0, 0]) {
								cube(size = [2.0000000000, 2.0000000000, 50]);
							}
						}
					}
				}
			}
		}
	}
	mirror(v = [1, 0, 0]) {
		translate(v = [0, 0, 0]) {
			union() {
				translate(v = [0, -25.0000000000, 0]) {
					translate(v = [-40.0000000000, 0, 0]) {
						union() {
							translate(v = [0, 0, 0]) {
								translate(v = [0, 0, 0]);
								union() {
									translate(v = [0, 0, 0]) {
										cube(size = [40.0000000000, 8, 1.0000000000]);
									}
									translate(v = [0, 0, 0]) {
										cube(size = [8, 25.0000000000, 1.0000000000]);
									}
								}
							}
							translate(v = [1.0000000000, 0, 0]) {
								translate(v = [0, 1.0000000000, 0]) {
									translate(v = [0, 0, 0]) {
										cube(size = [40.0000000000, 3.0000000000, 5.0000000000]);
									}
								}
							}
							translate(v = [0, 1.0000000000, 0]) {
								translate(v = [1.0000000000, 0, 0]) {
									translate(v = [0, 0, 0]) {
										cube(size = [3.0000000000, 25.0000000000, 5.0000000000]);
									}
								}
							}
							union() {
								translate(v = [1.0000000000, 0, 0]) {
									translate(v = [0, 1.0000000000, 0]) {
										difference() {
											translate(v = [0, 0, 0]) {
												translate(v = [0, 0, 0]);
												translate(v = [0, 0, 0]) {
													cube(size = [8, 8, 50]);
												}
											}
											translate(v = [4.0000000000, 0, 0]) {
												translate(v = [0, 4.0000000000, 0]) {
													translate(v = [0, 0, 47.0000000000]) {
														translate(v = [0, 0, 0]) {
															linear_extrude(height = 3.0000000000) {
																circle($fn = 48, r = 3.0500000000);
															}
														}
													}
												}
											}
											union() {
												translate(v = [0, 0, 43.4000000000]) {
													translate(v = [0, 4.0000000000, 0]) {
														translate(v = [4.0000000000, 0, 0]) {
															union() {
																translate(v = [0, 0, 0]) {
																	linear_extrude(height = 2.6000000000) {
																		circle($fn = 6, r = 3.1750000000);
																	}
																}
																translate(v = [0, 0, -10]) {
																	translate(v = [0, 0, 0]) {
																		linear_extrude(height = 20) {
																			circle($fn = 48, r = 1.5500000000);
																		}
																	}
																}
															}
														}
													}
												}
												translate(v = [0, 0, 43.4000000000]) {
													translate(v = [4.0000000000, 0, 0]) {
														translate(v = [0, 1.2500000000, 0]) {
															translate(v = [0, 0, 0]) {
																cube(size = [5.5000000000, 5.5000000000, 2.6000000000]);
															}
														}
													}
												}
											}
											union() {
												translate(v = [5.6001000000, 0, 0]) {
													translate(v = [0, 0, 10]) {
														translate(v = [0, 4.0000000000, 0]) {
															rotate(a = 90, v = [0, 1, 0]) {
																union() {
																	translate(v = [0, 0, 0]) {
																		linear_extrude(height = 2.4000000000) {
																			circle($fn = 6, r = 3.1750000000);
																		}
																	}
																	translate(v = [0, 0, -10]) {
																		translate(v = [0, 0, 0]) {
																			linear_extrude(height = 20) {
																				circle($fn = 48, r = 1.5500000000);
																			}
																		}
																	}
																}
															}
														}
													}
												}
												translate(v = [4.0000000000, 0, 0]) {
													translate(v = [0, 0, 35]) {
														translate(v = [0, 5.6001000000, 0]) {
															rotate(a = 90, v = [0, 0, 1]) {
																translate(v = [0, 0, 0]) {
																	rotate(a = 90, v = [0, 1, 0]) {
																		union() {
																			translate(v = [0, 0, 0]) {
																				linear_extrude(height = 2.4000000000) {
																					circle($fn = 6, r = 3.1750000000);
																				}
																			}
																			translate(v = [0, 0, -10]) {
																				translate(v = [0, 0, 0]) {
																					linear_extrude(height = 20) {
																						circle($fn = 48, r = 1.5500000000);
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								translate(v = [0, 0, 0]) {
									cube(size = [2.0000000000, 2.0000000000, 50]);
								}
							}
						}
					}
				}
				mirror(v = [0, 1, 0]) {
					translate(v = [0, 0, 0]) {
						translate(v = [0, -25.0000000000, 0]) {
							translate(v = [-40.0000000000, 0, 0]) {
								union() {
									translate(v = [0, 0, 0]) {
										translate(v = [0, 0, 0]);
										union() {
											translate(v = [0, 0, 0]) {
												cube(size = [40.0000000000, 8, 1.0000000000]);
											}
											translate(v = [0, 0, 0]) {
												cube(size = [8, 25.0000000000, 1.0000000000]);
											}
										}
									}
									translate(v = [1.0000000000, 0, 0]) {
										translate(v = [0, 1.0000000000, 0]) {
											translate(v = [0, 0, 0]) {
												cube(size = [40.0000000000, 3.0000000000, 5.0000000000]);
											}
										}
									}
									translate(v = [0, 1.0000000000, 0]) {
										translate(v = [1.0000000000, 0, 0]) {
											translate(v = [0, 0, 0]) {
												cube(size = [3.0000000000, 25.0000000000, 5.0000000000]);
											}
										}
									}
									union() {
										translate(v = [1.0000000000, 0, 0]) {
											translate(v = [0, 1.0000000000, 0]) {
												difference() {
													translate(v = [0, 0, 0]) {
														translate(v = [0, 0, 0]);
														translate(v = [0, 0, 0]) {
															cube(size = [8, 8, 50]);
														}
													}
													translate(v = [4.0000000000, 0, 0]) {
														translate(v = [0, 4.0000000000, 0]) {
															translate(v = [0, 0, 47.0000000000]) {
																translate(v = [0, 0, 0]) {
																	linear_extrude(height = 3.0000000000) {
																		circle($fn = 48, r = 3.0500000000);
																	}
																}
															}
														}
													}
													union() {
														translate(v = [0, 0, 43.4000000000]) {
															translate(v = [0, 4.0000000000, 0]) {
																translate(v = [4.0000000000, 0, 0]) {
																	union() {
																		translate(v = [0, 0, 0]) {
																			linear_extrude(height = 2.6000000000) {
																				circle($fn = 6, r = 3.1750000000);
																			}
																		}
																		translate(v = [0, 0, -10]) {
																			translate(v = [0, 0, 0]) {
																				linear_extrude(height = 20) {
																					circle($fn = 48, r = 1.5500000000);
																				}
																			}
																		}
																	}
																}
															}
														}
														translate(v = [0, 0, 43.4000000000]) {
															translate(v = [4.0000000000, 0, 0]) {
																translate(v = [0, 1.2500000000, 0]) {
																	translate(v = [0, 0, 0]) {
																		cube(size = [5.5000000000, 5.5000000000, 2.6000000000]);
																	}
																}
															}
														}
													}
													union() {
														translate(v = [5.6001000000, 0, 0]) {
															translate(v = [0, 0, 10]) {
																translate(v = [0, 4.0000000000, 0]) {
																	rotate(a = 90, v = [0, 1, 0]) {
																		union() {
																			translate(v = [0, 0, 0]) {
																				linear_extrude(height = 2.4000000000) {
																					circle($fn = 6, r = 3.1750000000);
																				}
																			}
																			translate(v = [0, 0, -10]) {
																				translate(v = [0, 0, 0]) {
																					linear_extrude(height = 20) {
																						circle($fn = 48, r = 1.5500000000);
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
														translate(v = [4.0000000000, 0, 0]) {
															translate(v = [0, 0, 35]) {
																translate(v = [0, 5.6001000000, 0]) {
																	rotate(a = 90, v = [0, 0, 1]) {
																		translate(v = [0, 0, 0]) {
																			rotate(a = 90, v = [0, 1, 0]) {
																				union() {
																					translate(v = [0, 0, 0]) {
																						linear_extrude(height = 2.4000000000) {
																							circle($fn = 6, r = 3.1750000000);
																						}
																					}
																					translate(v = [0, 0, -10]) {
																						translate(v = [0, 0, 0]) {
																							linear_extrude(height = 20) {
																								circle($fn = 48, r = 1.5500000000);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										translate(v = [0, 0, 0]) {
											cube(size = [2.0000000000, 2.0000000000, 50]);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
from typing import Tuple

from solid import OpenSCADObject, scad_render_to_file
from solid.objects import mirror, rotate, translate
from solid.utils import back, down, forward, hole, left, part, right, up

P3 = Tuple[float, float, float]
Vec3 = P3

SEGMENTS = 48


class SolidBuilder:
    def __init__(self, o: OpenSCADObject = None) -> None:
        self._oso = translate([0, 0, 0])
        self._oso.add(o)

    def add(self, sb: "SolidBuilder") -> "SolidBuilder":
        self._oso.add(sb.render())
        return self

    def right(self, d: float) -> "SolidBuilder":
        self._oso = right(d)(self._oso)
        return self

    def left(self, d: float) -> "SolidBuilder":
        self._oso = left(d)(self._oso)
        return self

    def forward(self, d: float) -> "SolidBuilder":
        self._oso = forward(d)(self._oso)
        return self

    def back(self, d: float) -> "SolidBuilder":
        self._oso = back(d)(self._oso)
        return self

    def up(self, d: float) -> "SolidBuilder":
        self._oso = up(d)(self._oso)
        return self

    def down(self, d: float) -> "SolidBuilder":
        self._oso = down(d)(self._oso)
        return self

    def hole(self, sb: "SolidBuilder") -> "SolidBuilder":
        self._oso = self._oso - hole()(sb._oso)
        return self

    def part(self) -> "SolidBuilder":
        self._oso = part()(self._oso)
        return self

    def translate(self, v: Vec3) -> "SolidBuilder":
        self._oso = translate(v)(self._oso)
        return self

    def mirror(self, v) -> "SolidBuilder":
        self._oso = mirror(v)(self._oso)
        return self

    def rotate(self, a: float, v) -> "SolidBuilder":
        self._oso = rotate(a, v)(self._oso)
        return self

    def render(self) -> OpenSCADObject:
        return self._oso

    def clone(self) -> "SolidBuilder":
        return SolidBuilder(self._oso.copy())

    def __add__(self, sb: "SolidBuilder") -> "SolidBuilder":
        self._oso += sb._oso
        return self

    def __sub__(self, sb: "SolidBuilder") -> "SolidBuilder":
        self._oso -= sb._oso
        return self

    def render_to_file(self, filepath):
        file_out = scad_render_to_file(
            self._oso, filepath=filepath, file_header=f"$fn = {SEGMENTS};"
        )
        print(f"{__file__}: SCAD file written to: \n{file_out}")


def node(o: OpenSCADObject) -> SolidBuilder:
    return SolidBuilder(o)


def empty() -> SolidBuilder:
    return node(translate([0, 0, 0]))
 
 
************************************************/
